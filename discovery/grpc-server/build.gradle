apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'
apply plugin: 'com.google.protobuf'

ext {
    set('springCloudVersion', "Greenwich.SR1")
}

docker {
    dependsOn build
    dockerfile file('src/main/docker/Dockerfile')
    name "${project.name}"
    version = "${project.version}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation 'io.github.lognet:grpc-spring-boot-starter:3.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.7.1' }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.22.2" }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
            task.generateDescriptorSet = true
            task.descriptorSetOptions.includeImports = true
        }
    }

}

task cleanProtoGen{
    doFirst{
        delete("$projectDir/src/main/protoGen")
    }
}

clean.dependsOn cleanProtoGen